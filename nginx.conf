events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Accept, Origin, Authorization' always;
    
    server {
        listen 80;
        
        # Handle OPTIONS requests for CORS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Enable larger request bodies for card creation
        client_max_body_size 10M;
        
        # Increase timeouts for debugging
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Add debugging headers
        add_header X-Debug-Message "Processed by nginx" always;

        # Route for authentication API
        location ~ ^/api/auth(/.*|$) {
            rewrite ^(.*)/$ $1 break;
            proxy_pass http://auth-service:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route for user microservice
        location ~ ^/api/utilisateurs(/.*|$) {
            rewrite ^(.*)/$ $1 break;
            proxy_pass http://user-service:8082;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route for vehicule microservice - Fix path handling (cartes legacy + vehicules)
        location ~ ^/api/(cartes|vehicules)(/.*|$) {
            # Remove trailing slash if present
            rewrite ^(.*)/$ $1 break;
            
            # Use explicit proxy_pass without trailing slash
            proxy_pass http://vehicule-service:8085;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            add_header X-Debug-Route "vehicule-service" always;
            add_header X-Original-URI $request_uri always;
        }
        
        # Route for market microservice
        location ~ ^/api/market(/.*|$) {
            rewrite ^(.*)/$ $1 break;
            proxy_pass http://market-service:8083;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route for game microservice
        location ~ ^/api/game(/.*|$) {
            rewrite ^(.*)/$ $1 break;
            proxy_pass http://game-service:8086;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (CSS, JS, images)
        location ~ \.(css|js|jpg|jpeg|png|gif|ico|html|woff|woff2|ttf|svg|eot)$ {
            root /usr/share/nginx/html;
            access_log off;
            expires 30d;
            try_files $uri $uri/ =404;
        }
        
        # Static web resources from auth service - root path
        location / {
            proxy_pass http://auth-service:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add debug headers
            add_header X-Debug-Message "Accessing auth service" always;
        }
        
        location /api/debug/ {
            proxy_pass http://vehicule-service:8085/api/debug/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
